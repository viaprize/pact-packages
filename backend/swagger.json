{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://github.com/samchon/nestia",
      "description": "insert your server url"
    }
  ],
  "info": {
    "version": "0.0.1",
    "title": "nestjs-boilerplate",
    "description": "",
    "license": {
      "name": "UNLICENSED"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "The created user object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Creates a new user and sends welcome email",
        "description": "Creates a new user and sends welcome email.",
        "x-nestia-namespace": "users.create",
        "x-nestia-jsDocTags": [
          {
            "name": "see",
            "text": [
              {
                "text": "{ MailService }",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "createUserType",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "- The user creation Interface.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "The created user object.",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/users/{authId}": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "authId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The user object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Get a user by ID",
        "description": "Get a user by ID.",
        "x-nestia-namespace": "users.findOne",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "authId",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "- Retrieve user by querying through it's auth id from auth provider.",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "The user object.",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUser": {
        "type": "object",
        "properties": {
          "email": {
            "description": "User's emails which will be used to send emails and futher communication",
            "x-typia-jsDocTags": [
              {
                "name": "example",
                "text": [
                  {
                    "text": "johnsmith@gmail.com",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "email",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"email\">",
                "kind": "format",
                "value": "email",
                "validate": "/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test($input)",
                "exclusive": [
                  "pattern"
                ]
              }
            ]
          },
          "user_id": {
            "description": "User Id which is gotten from the auth provider like privy , torus etc...",
            "x-typia-jsDocTags": [
              {
                "name": "example",
                "text": [
                  {
                    "text": "did:lsjfdlk:ljsdlkjsdfkm",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "minLength": 5,
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "MinLength<5>",
                "kind": "minLength",
                "value": 5,
                "validate": "5 <= $input.length",
                "exclusive": true
              }
            ]
          },
          "name": {
            "description": "The user name which is gotten from the onboarding process or page",
            "x-typia-jsDocTags": [
              {
                "name": "example",
                "text": [
                  {
                    "text": "Johnny Sins",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "email",
          "user_id",
          "name"
        ],
        "description": "Interface of Create User , using this interface it create a new user in",
        "x-typia-jsDocTags": [
          {
            "name": "link",
            "text": [
              {
                "text": "../users.service~UsersService",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "email": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "authId": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "isAdmin": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "boolean"
          },
          "submissions": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submission"
            }
          },
          "prizeProposals": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrizeProposals"
            }
          }
        },
        "nullable": false,
        "required": [
          "id",
          "email",
          "authId",
          "name",
          "isAdmin",
          "submissions",
          "prizeProposals"
        ],
        "x-typia-jsDocTags": []
      },
      "Submission": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "submissionTitle": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "subimissionDescription": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "prize": {
            "$ref": "#/components/schemas/Prize"
          }
        },
        "nullable": false,
        "required": [
          "id",
          "submissionTitle",
          "subimissionDescription",
          "user",
          "prize"
        ],
        "x-typia-jsDocTags": []
      },
      "Prize": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "description": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "isAutomatic": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "boolean"
          },
          "startVotingDate": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "startSubmissionDate": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "proposer_address": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "contract_address": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "admins": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "proficiencies": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "priorities": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "created_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "submissions": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submission"
            }
          }
        },
        "nullable": false,
        "required": [
          "id",
          "description",
          "isAutomatic",
          "startVotingDate",
          "startSubmissionDate",
          "proposer_address",
          "contract_address",
          "admins",
          "proficiencies",
          "priorities",
          "created_at",
          "updated_at",
          "submissions"
        ],
        "x-typia-jsDocTags": []
      },
      "PrizeProposals": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "voting_time": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "submission_time": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "admins": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "isApproved": {
            "description": "The Columns here are not part of the smart contract",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "boolean"
          },
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "description": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "isAutomatic": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "boolean"
          },
          "startVotingDate": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "startSubmissionDate": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time"
          },
          "proficiencies": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "priorities": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "images": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "nullable": false,
        "required": [
          "id", 
          "voting_time",
          "submission_time",
          "admins",
          "isApproved",
          "title",
          "description",
          "isAutomatic",
          "startVotingDate",
          "startSubmissionDate",
          "proficiencies",
          "priorities",
          "images",
          "user"
        ],
        "x-typia-jsDocTags": []
      }
    }
  }
}