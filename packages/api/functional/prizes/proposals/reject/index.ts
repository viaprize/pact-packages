/**
 * @packageDocumentation
 * @module api.functional.prizes.proposals.reject
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { RejectProposalDto } from "../../../../../../backend/src/prizes/dto/reject-proposal.dto";

/**
 * Admin Reject proposal
 *
 * @date 9/25/2023 - 5:19:58 AM
 * @summary Reject Proposal,
 * @async
 * @param id
 * @security bearer
 * @param rejectProposalDto
 * @returns
 *
 * @controller PrizesController.rejectProposal
 * @path POST /prizes/proposals/reject/:id
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function rejectProposal(
  connection: IConnection,
  id: string,
  rejectProposalDto: rejectProposal.Input,
): Promise<void> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...(connection.headers ?? {}),
        "Content-Type": "application/json",
      },
    },
    {
      ...rejectProposal.METADATA,
      path: rejectProposal.path(id),
    } as const,
    rejectProposalDto,
  );
}
export namespace rejectProposal {
  export type Input = Primitive<RejectProposalDto>;

  export const METADATA = {
    method: "POST",
    path: "/prizes/proposals/reject/:id",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (id: string): string => {
    return `/prizes/proposals/reject/${encodeURIComponent(id ?? "null")}`;
  };
}
